{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ui/Button.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'destructive';\n  size?: 'sm' | 'md' | 'lg';\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  children,\n  className,\n  ...props\n}) => {\n  const baseStyles = 'font-bold uppercase tracking-wider border-2 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantStyles = {\n    primary: 'bg-red-900 hover:bg-red-800 text-gray-200 border-red-700 focus:ring-red-700',\n    secondary: 'bg-gray-800 hover:bg-gray-700 text-gray-200 border-gray-600 focus:ring-gray-600',\n    destructive: 'bg-black hover:bg-gray-900 text-red-500 border-red-900 focus:ring-red-900',\n  };\n  \n  const sizeStyles = {\n    sm: 'py-1 px-3 text-sm',\n    md: 'py-2 px-4 text-base',\n    lg: 'py-3 px-6 text-lg',\n  };\n  \n  return (\n    <button\n      className={`${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className || ''}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;AAUO,MAAM,SAAgC,CAAC,EAC5C,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,QAAQ,EACR,SAAS,EACT,GAAG,OACJ;IACC,MAAM,aAAa;IAEnB,MAAM,gBAAgB;QACpB,SAAS;QACT,WAAW;QACX,aAAa;IACf;IAEA,MAAM,aAAa;QACjB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QACC,WAAW,GAAG,WAAW,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,IAAI;QAC1F,GAAG,KAAK;kBAER;;;;;;AAGP;KA7Ba"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ui/Slider.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface SliderProps {\n  min: number;\n  max: number;\n  step?: number;\n  value: number;\n  onChange: (value: number) => void;\n  label: string;\n  id: string;\n}\n\nexport const Slider: React.FC<SliderProps> = ({\n  min,\n  max,\n  step = 1,\n  value,\n  onChange,\n  label,\n  id,\n}) => {\n  return (\n    <div className=\"w-full mb-4\">\n      <div className=\"flex justify-between mb-1\">\n        <label htmlFor={id} className=\"text-sm font-medium text-gray-300\">\n          {label}\n        </label>\n        <span className=\"text-sm text-gray-400\">{value}</span>\n      </div>\n      <input\n        id={id}\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={(e) => onChange(Number(e.target.value))}\n        className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer accent-red-700\"\n      />\n      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n        <span>{min}</span>\n        <span>{max}</span>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;AAcO,MAAM,SAAgC,CAAC,EAC5C,GAAG,EACH,GAAG,EACH,OAAO,CAAC,EACR,KAAK,EACL,QAAQ,EACR,KAAK,EACL,EAAE,EACH;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,SAAS;wBAAI,WAAU;kCAC3B;;;;;;kCAEH,6LAAC;wBAAK,WAAU;kCAAyB;;;;;;;;;;;;0BAE3C,6LAAC;gBACC,IAAI;gBACJ,MAAK;gBACL,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,OAAO,EAAE,MAAM,CAAC,KAAK;gBAC/C,WAAU;;;;;;0BAEZ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCAAM;;;;;;kCACP,6LAAC;kCAAM;;;;;;;;;;;;;;;;;;AAIf;KAjCa"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ui/Select.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface SelectOption {\n  value: string;\n  label: string;\n}\n\ninterface SelectProps {\n  options: SelectOption[];\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n  id: string;\n}\n\nexport const Select: React.FC<SelectProps> = ({\n  options,\n  value,\n  onChange,\n  label,\n  id,\n}) => {\n  return (\n    <div className=\"w-full mb-4\">\n      <label htmlFor={id} className=\"block text-sm font-medium text-gray-300 mb-1\">\n        {label}\n      </label>\n      <select\n        id={id}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-gray-200 focus:outline-none focus:ring-2 focus:ring-red-700\"\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;AAiBO,MAAM,SAAgC,CAAC,EAC5C,OAAO,EACP,KAAK,EACL,QAAQ,EACR,KAAK,EACL,EAAE,EACH;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,SAAS;gBAAI,WAAU;0BAC3B;;;;;;0BAEH,6LAAC;gBACC,IAAI;gBACJ,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,WAAU;0BAET,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAA0B,OAAO,OAAO,KAAK;kCAC3C,OAAO,KAAK;uBADF,OAAO,KAAK;;;;;;;;;;;;;;;;AAOnC;KA1Ba"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ui/Toggle.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface ToggleProps {\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n  label: string;\n  id: string;\n}\n\nexport const Toggle: React.FC<ToggleProps> = ({\n  checked,\n  onChange,\n  label,\n  id,\n}) => {\n  return (\n    <div className=\"flex items-center justify-between mb-4\">\n      <label htmlFor={id} className=\"text-sm font-medium text-gray-300\">\n        {label}\n      </label>\n      <button\n        id={id}\n        type=\"button\"\n        onClick={() => onChange(!checked)}\n        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-red-700 focus:ring-offset-2 ${\n          checked ? 'bg-red-700' : 'bg-gray-700'\n        }`}\n        role=\"switch\"\n        aria-checked={checked}\n      >\n        <span\n          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n            checked ? 'translate-x-6' : 'translate-x-1'\n          }`}\n        />\n      </button>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;AAWO,MAAM,SAAgC,CAAC,EAC5C,OAAO,EACP,QAAQ,EACR,KAAK,EACL,EAAE,EACH;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,SAAS;gBAAI,WAAU;0BAC3B;;;;;;0BAEH,6LAAC;gBACC,IAAI;gBACJ,MAAK;gBACL,SAAS,IAAM,SAAS,CAAC;gBACzB,WAAW,CAAC,iJAAiJ,EAC3J,UAAU,eAAe,eACzB;gBACF,MAAK;gBACL,gBAAc;0BAEd,cAAA,6LAAC;oBACC,WAAW,CAAC,0EAA0E,EACpF,UAAU,kBAAkB,iBAC5B;;;;;;;;;;;;;;;;;AAKZ;KA7Ba"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ui/Card.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface CardProps {\n  children: React.ReactNode;\n  title?: string;\n  className?: string;\n}\n\nexport const Card: React.FC<CardProps> = ({ children, title, className }) => {\n  return (\n    <div className={`bg-gray-900 border-2 border-gray-800 rounded-md overflow-hidden shadow-lg ${className || ''}`}>\n      {title && (\n        <div className=\"bg-gray-800 px-4 py-3 border-b border-gray-700\">\n          <h3 className=\"text-lg font-bold text-red-500 uppercase tracking-wider\">{title}</h3>\n        </div>\n      )}\n      <div className=\"p-4\">{children}</div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;AAUO,MAAM,OAA4B,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;IACtE,qBACE,6LAAC;QAAI,WAAW,CAAC,0EAA0E,EAAE,aAAa,IAAI;;YAC3G,uBACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAA2D;;;;;;;;;;;0BAG7E,6LAAC;gBAAI,WAAU;0BAAO;;;;;;;;;;;;AAG5B;KAXa"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/lib/utils/ascii-converter.ts"],"sourcesContent":["/**\n * ASCII Art Converter Utility\n * \n * This utility provides functions to convert images to ASCII art with various configuration options.\n */\n\nexport interface AsciiConverterOptions {\n  // Character set to use for ASCII art (from darkest to lightest)\n  characterSet: string;\n  // Width of the output ASCII art in characters\n  width: number;\n  // Whether to invert the brightness\n  invert: boolean;\n  // Contrast adjustment (-1 to 1)\n  contrast: number;\n  // Brightness adjustment (-1 to 1)\n  brightness: number;\n  // Whether to use color in the output\n  colored: boolean;\n  // Line height for the output\n  lineHeight: number;\n  // Font size for the output\n  fontSize: number;\n  // Font family for the output\n  fontFamily: string;\n}\n\nexport const DEFAULT_OPTIONS: AsciiConverterOptions = {\n  characterSet: '@%#*+=-:. ',\n  width: 80,\n  invert: false,\n  contrast: 0,\n  brightness: 0,\n  colored: false,\n  lineHeight: 1,\n  fontSize: 12,\n  fontFamily: 'monospace',\n};\n\n// Predefined character sets\nexport const CHARACTER_SETS = {\n  standard: '@%#*+=-:. ',\n  detailed: '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\\\|()1{}[]?-_+~<>i!lI;:,\"^`\\'. ',\n  blocks: '█▓▒░ ',\n  simple: '#@%*+=-:. ',\n  numbers: '9876543210 ',\n  binary: '10 ',\n  warhammer: '■Ѱ☠Ѧ◊⚜☣◘■#&%Ѳϟ☣=+Ѩ*∞҈⚙;:. ',\n  imperial: '⚜☠☣⚙▓#%&*█▒░◊+*=;:. ',\n};\n\n/**\n * Converts an image to ASCII art\n * @param imageData - ImageData from canvas context\n * @param options - Configuration options\n * @returns ASCII art as string\n */\n/**\n * Detects edges in the image data\n */\nconst detectEdges = (imageData: ImageData): ImageData => {\n  const canvas = document.createElement('canvas');\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  const ctx = canvas.getContext('2d')!;\n  ctx.putImageData(imageData, 0, 0);\n  \n  const output = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const data = output.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  // Simple Sobel operator for edge detection\n  const sobelX = [-1, 0, 1, -2, 0, 2, -1, 0, 1];\n  const sobelY = [-1, -2, -1, 0, 0, 0, 1, 2, 1];\n  \n  // Create a temporary array to store the original data\n  const origData = new Uint8ClampedArray(data);\n  \n  for (let y = 1; y < height - 1; y++) {\n    for (let x = 1; x < width - 1; x++) {\n      let magX = 0;\n      let magY = 0;\n      \n      // Apply the convolution\n      for (let ky = -1; ky <= 1; ky++) {\n        for (let kx = -1; kx <= 1; kx++) {\n          const idx = ((y + ky) * width + (x + kx)) * 4;\n          const pixVal = (origData[idx] + origData[idx + 1] + origData[idx + 2]) / 3;\n          \n          magX += pixVal * sobelX[(ky + 1) * 3 + (kx + 1)];\n          magY += pixVal * sobelY[(ky + 1) * 3 + (kx + 1)];\n        }\n      }\n      \n      // Calculate gradient magnitude\n      const mag = Math.sqrt(magX * magX + magY * magY);\n      \n      // Set pixel value\n      const outIdx = (y * width + x) * 4;\n      data[outIdx] = data[outIdx + 1] = data[outIdx + 2] = Math.min(255, mag);\n    }\n  }\n  \n  return output;\n};\n\n/**\n * Enhances the details in the image by combining the original with edge detection\n */\nconst enhanceDetails = (imageData: ImageData, edgeWeight: number = 0.3): ImageData => {\n  const edgeData = detectEdges(imageData);\n  const canvas = document.createElement('canvas');\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  const ctx = canvas.getContext('2d')!;\n  \n  // Draw original image\n  ctx.putImageData(imageData, 0, 0);\n  \n  // Overlay edge data with reduced opacity\n  const blendedData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const data = blendedData.data;\n  const edgeDataArr = edgeData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Blend edge data with original image\n    const edgeIntensity = (edgeDataArr[i] + edgeDataArr[i + 1] + edgeDataArr[i + 2]) / 3;\n    \n    // Enhance contrast around edges\n    data[i] = Math.min(255, data[i] * (1 - edgeWeight) + edgeIntensity * edgeWeight);\n    data[i + 1] = Math.min(255, data[i + 1] * (1 - edgeWeight) + edgeIntensity * edgeWeight);\n    data[i + 2] = Math.min(255, data[i + 2] * (1 - edgeWeight) + edgeIntensity * edgeWeight);\n  }\n  \n  return blendedData;\n};\n\nexport const imageToAscii = (\n  imageData: ImageData,\n  options: Partial<AsciiConverterOptions> = {}\n): string => {\n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  const { width, characterSet, invert } = opts;\n  \n  // Calculate a better aspect ratio (characters are taller than wide)\n  const aspectRatio = 0.4; // Typical character height/width ratio\n  const height = Math.floor((imageData.height / imageData.width) * width * aspectRatio);\n  const blockWidth = Math.floor(imageData.width / width);\n  const blockHeight = Math.floor(imageData.height / height);\n  \n  let result = '';\n  \n  // Apply brightness and contrast adjustments\n  const adjustedData = applyAdjustments(imageData, opts);\n  \n  // Enhance details with edge detection\n  const enhancedData = enhanceDetails(adjustedData, 0.3);\n  \n  // Process blocks and build ASCII art\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const blockStartX = x * blockWidth;\n      const blockStartY = y * blockHeight;\n      \n      // Get brightness with smart sampling\n      const { brightness, variance } = getSmartSample(\n        enhancedData,\n        blockStartX,\n        blockStartY,\n        blockWidth,\n        blockHeight\n      );\n      \n      // Use variance to select characters that represent detail\n      let effectiveBrightness = brightness;\n      if (variance > 0.2) { // High variance means more detail\n        // Boost contrast in detailed areas\n        effectiveBrightness = brightness > 0.5 ? brightness + 0.1 : brightness - 0.1;\n        effectiveBrightness = Math.max(0, Math.min(1, effectiveBrightness));\n      }\n      \n      // Map brightness to character\n      const charIndex = invert\n        ? Math.floor((1 - effectiveBrightness) * (characterSet.length - 1))\n        : Math.floor(effectiveBrightness * (characterSet.length - 1));\n      \n      result += characterSet[charIndex];\n    }\n    result += '\\\\n';\n  }\n  \n  return result;\n};\n\n/**\n * Converts an image to colored ASCII art (HTML)\n * @param imageData - ImageData from canvas context\n * @param options - Configuration options\n * @returns ASCII art as HTML\n */\nexport const imageToColoredAsciiHtml = (\n  imageData: ImageData,\n  options: Partial<AsciiConverterOptions> = {}\n): string => {\n  const opts = { ...DEFAULT_OPTIONS, ...options };\n  const { width, characterSet, invert, fontSize, lineHeight, fontFamily } = opts;\n  \n  // Better aspect ratio for characters\n  const aspectRatio = 0.4; // Typical character height/width ratio\n  const height = Math.floor((imageData.height / imageData.width) * width * aspectRatio);\n  const blockWidth = Math.floor(imageData.width / width);\n  const blockHeight = Math.floor(imageData.height / height);\n  \n  let result = `<div style=\"font-family: ${fontFamily}; font-size: ${fontSize}px; line-height: ${lineHeight}; letter-spacing: 0; white-space: pre;\">`;\n  \n  // Apply brightness and contrast adjustments\n  const adjustedData = applyAdjustments(imageData, opts);\n  \n  // Enhance details with edge detection\n  const enhancedData = enhanceDetails(adjustedData, 0.3);\n  \n  // Process blocks and build colored ASCII art\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const blockStartX = x * blockWidth;\n      const blockStartY = y * blockHeight;\n      \n      // Get brightness and color with smart sampling\n      const { brightness, color, variance } = getSmartSampleWithColor(\n        enhancedData,\n        blockStartX,\n        blockStartY,\n        blockWidth,\n        blockHeight\n      );\n      \n      // Use variance to select characters that represent detail\n      let effectiveBrightness = brightness;\n      if (variance > 0.2) { // High variance means more detail\n        // Boost contrast in detailed areas\n        effectiveBrightness = brightness > 0.5 ? brightness + 0.1 : brightness - 0.1;\n        effectiveBrightness = Math.max(0, Math.min(1, effectiveBrightness));\n      }\n      \n      // Map brightness to character\n      const charIndex = invert\n        ? Math.floor((1 - effectiveBrightness) * (characterSet.length - 1))\n        : Math.floor(effectiveBrightness * (characterSet.length - 1));\n      \n      const char = characterSet[charIndex];\n      \n      // Add colored character with a slight glow effect for Warhammer aesthetic\n      const glowEffect = variance > 0.15 ? \n        `text-shadow: 0 0 2px rgb(${color.r}, ${color.g}, ${color.b}, 0.8);` : '';\n      \n      result += `<span style=\"color: rgb(${color.r}, ${color.g}, ${color.b}); ${glowEffect}\">${char}</span>`;\n    }\n    result += '\\n';\n  }\n  \n  result += '</div>';\n  return result;\n};\n\n/**\n * Gets the average brightness of a block of pixels\n */\nconst getAverageBrightness = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): number => {\n  let totalBrightness = 0;\n  let pixelCount = 0;\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const pixelX = startX + x;\n      const pixelY = startY + y;\n      \n      if (pixelX < imageData.width && pixelY < imageData.height) {\n        const index = (pixelY * imageData.width + pixelX) * 4;\n        const r = imageData.data[index];\n        const g = imageData.data[index + 1];\n        const b = imageData.data[index + 2];\n        \n        // Calculate perceived brightness\n        // Using the formula: 0.299*R + 0.587*G + 0.114*B\n        const brightness = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n        \n        totalBrightness += brightness;\n        pixelCount++;\n      }\n    }\n  }\n  \n  return pixelCount > 0 ? totalBrightness / pixelCount : 0;\n};\n\n/**\n * Gets the average brightness and color of a block of pixels\n */\n/**\n * Gets brightness, color and variance using smart sampling\n */\nconst getSmartSampleWithColor = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): { brightness: number; color: { r: number; g: number; b: number }; variance: number } => {\n  let totalBrightness = 0;\n  let totalR = 0;\n  let totalG = 0;\n  let totalB = 0;\n  let pixelCount = 0;\n  const brightnessValues: number[] = [];\n  \n  // Use adaptive sampling - more samples in high-detail areas\n  const sampleStep = Math.max(1, Math.floor(Math.min(width, height) / 8));\n  \n  for (let y = 0; y < height; y += sampleStep) {\n    for (let x = 0; x < width; x += sampleStep) {\n      const pixelX = startX + x;\n      const pixelY = startY + y;\n      \n      if (pixelX < imageData.width && pixelY < imageData.height) {\n        const index = (pixelY * imageData.width + pixelX) * 4;\n        const r = imageData.data[index];\n        const g = imageData.data[index + 1];\n        const b = imageData.data[index + 2];\n        \n        // Calculate perceived brightness with improved formula\n        const brightness = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n        brightnessValues.push(brightness);\n        \n        totalBrightness += brightness;\n        totalR += r;\n        totalG += g;\n        totalB += b;\n        pixelCount++;\n      }\n    }\n  }\n  \n  // Calculate variance (measure of detail)\n  const avgBrightness = pixelCount > 0 ? totalBrightness / pixelCount : 0;\n  let variance = 0;\n  \n  for (const b of brightnessValues) {\n    variance += (b - avgBrightness) ** 2;\n  }\n  variance = pixelCount > 1 ? variance / (pixelCount - 1) : 0;\n  \n  return {\n    brightness: avgBrightness,\n    color: {\n      r: pixelCount > 0 ? Math.floor(totalR / pixelCount) : 0,\n      g: pixelCount > 0 ? Math.floor(totalG / pixelCount) : 0,\n      b: pixelCount > 0 ? Math.floor(totalB / pixelCount) : 0,\n    },\n    variance\n  };\n};\n\n/**\n * Gets brightness and variance using smart sampling\n */\nconst getSmartSample = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): { brightness: number; variance: number } => {\n  const { brightness, variance } = getSmartSampleWithColor(\n    imageData, startX, startY, width, height\n  );\n  return { brightness, variance };\n};\n\n/**\n * Gets the average brightness and color of a block of pixels (simple version)\n */\nconst getAverageBrightnessAndColor = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): { brightness: number; color: { r: number; g: number; b: number } } => {\n  const { brightness, color } = getSmartSampleWithColor(\n    imageData, startX, startY, width, height\n  );\n  return { brightness, color };\n};\n\n/**\n * Applies brightness and contrast adjustments to image data\n */\nconst applyAdjustments = (\n  imageData: ImageData,\n  options: AsciiConverterOptions\n): ImageData => {\n  const { brightness, contrast } = options;\n  \n  // Create a copy of the image data\n  const canvas = document.createElement('canvas');\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  const ctx = canvas.getContext('2d')!;\n  ctx.putImageData(imageData, 0, 0);\n  \n  // Apply brightness and contrast\n  if (brightness !== 0 || contrast !== 0) {\n    const adjustedData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = adjustedData.data;\n    \n    // Convert contrast to factor (range 0-2)\n    const contrastFactor = contrast >= 0 \n      ? 1 + contrast \n      : 1 / (1 - contrast);\n    \n    // Convert brightness to offset (range -255 to 255)\n    const brightnessOffset = brightness * 255;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      // Apply brightness\n      data[i] += brightnessOffset;\n      data[i + 1] += brightnessOffset;\n      data[i + 2] += brightnessOffset;\n      \n      // Apply contrast\n      data[i] = ((data[i] - 128) * contrastFactor) + 128;\n      data[i + 1] = ((data[i + 1] - 128) * contrastFactor) + 128;\n      data[i + 2] = ((data[i + 2] - 128) * contrastFactor) + 128;\n      \n      // Clamp values\n      data[i] = Math.max(0, Math.min(255, data[i]));\n      data[i + 1] = Math.max(0, Math.min(255, data[i + 1]));\n      data[i + 2] = Math.max(0, Math.min(255, data[i + 2]));\n    }\n    \n    return adjustedData;\n  }\n  \n  return imageData;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file://E%3A/bit-styler/src/components/ascii/AsciiArtGenerator.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Image from 'next/image';\nimport { Button } from '../ui/Button';\nimport { Slider } from '../ui/Slider';\nimport { Select } from '../ui/Select';\nimport { Toggle } from '../ui/Toggle';\nimport { Card } from '../ui/Card';\nimport {\n  AsciiConverterOptions,\n  DEFAULT_OPTIONS,\n  CHARACTER_SETS,\n  imageToAscii,\n  imageToColoredAsciiHtml,\n} from '../../lib/utils/ascii-converter';\n\nexport const AsciiArtGenerator: React.FC = () => {\n  const [image, setImage] = useState<HTMLImageElement | null>(null);\n  const [asciiArt, setAsciiArt] = useState<string>('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [options, setOptions] = useState<AsciiConverterOptions>({\n    ...DEFAULT_OPTIONS,\n    characterSet: CHARACTER_SETS.standard,\n  });\n  const [previewMode, setPreviewMode] = useState<'ascii' | 'image'>('ascii');\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  \n  // Create canvas element on component mount\n  useEffect(() => {\n    // Create a canvas element if it doesn't exist\n    if (!canvasRef.current) {\n      const canvas = document.createElement('canvas');\n      canvasRef.current = canvas;\n    }\n    \n    // Cleanup function to handle component unmount\n    return () => {\n      canvasRef.current = null;\n    };\n  }, []);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const asciiOutputRef = useRef<HTMLDivElement>(null);\n\n  // Character set options for the select dropdown\n  const characterSetOptions = Object.entries(CHARACTER_SETS).map(([key]) => ({\n    value: key,\n    label: key.charAt(0).toUpperCase() + key.slice(1),\n  }));\n\n  // Handle file input change\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const img = new window.Image();\n      img.onload = () => {\n        setImage(img);\n        generateAsciiArt(img);\n      };\n      img.src = e.target?.result as string;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Handle drag and drop\n  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const file = event.dataTransfer.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const img = new window.Image();\n      img.onload = () => {\n        setImage(img);\n        generateAsciiArt(img);\n      };\n      img.src = e.target?.result as string;\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Handle drag over\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  // Generate ASCII art from image\n  const generateAsciiArt = useCallback((imgElement: HTMLImageElement) => {\n    setIsProcessing(true);\n    \n    // Use setTimeout to allow the UI to update before processing\n    setTimeout(() => {\n      try {\n        // Create a local copy of the canvas to avoid React lifecycle issues\n        let localCanvas: HTMLCanvasElement;\n        \n        // Ensure canvas ref exists or create a new one\n        if (!canvasRef.current) {\n          localCanvas = document.createElement('canvas');\n          canvasRef.current = localCanvas;\n        } else {\n          localCanvas = canvasRef.current;\n        }\n        \n        const ctx = localCanvas.getContext('2d');\n        \n        if (!ctx) {\n          throw new Error('Could not get 2D context from canvas');\n        }\n\n        // Set canvas dimensions\n        localCanvas.width = imgElement.width;\n        localCanvas.height = imgElement.height;\n\n        // Draw image on canvas\n        ctx.drawImage(imgElement, 0, 0);\n\n        // Get image data\n        const imageData = ctx.getImageData(0, 0, localCanvas.width, localCanvas.height);\n\n        // Generate ASCII art\n        let result;\n        if (options.colored) {\n          result = imageToColoredAsciiHtml(imageData, options);\n          setAsciiArt(result); // Store HTML string for colored output\n        } else {\n          result = imageToAscii(imageData, options);\n          setAsciiArt(result); // Store plain ASCII text\n        }\n        setIsProcessing(false);\n      } catch (error) {\n        console.error('Error generating ASCII art:', error);\n        setIsProcessing(false);\n      }\n    }, 0);\n  }, [options, canvasRef, asciiOutputRef, setAsciiArt, setIsProcessing]);\n\n  // Update ASCII art when options change\n  useEffect(() => {\n    if (image) {\n      generateAsciiArt(image);\n    }\n  }, [options, generateAsciiArt, image]);\n\n  // Handle option changes\n  const updateOption = <K extends keyof AsciiConverterOptions>(\n    key: K,\n    value: AsciiConverterOptions[K]\n  ) => {\n    setOptions((prev) => ({ ...prev, [key]: value }));\n  };\n\n  // Handle character set selection\n  const handleCharacterSetChange = (value: string) => {\n    const selectedSet = CHARACTER_SETS[value as keyof typeof CHARACTER_SETS] || CHARACTER_SETS.standard;\n    updateOption('characterSet', selectedSet);\n  };\n\n  // Copy ASCII art to clipboard\n  const copyToClipboard = () => {\n    if (!asciiArt) return;\n\n    navigator.clipboard.writeText(asciiArt.replace(/\\\\n/g, '\\n'))\n      .then(() => {\n        alert('ASCII art copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy: ', err);\n      });\n  };\n\n  // Download ASCII art as text file\n  const downloadAsciiArt = () => {\n    if (!asciiArt) return;\n\n    const element = document.createElement('a');\n    const file = new Blob([asciiArt.replace(/\\\\n/g, '\\n')], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = 'ascii-art.txt';\n    \n    // Safer approach: don't append to DOM, just simulate click\n    element.style.display = 'none';\n    element.click();\n    \n    // Clean up the URL object\n    setTimeout(() => {\n      URL.revokeObjectURL(element.href);\n    }, 100);\n  };\n\n  // Download as HTML\n  const downloadAsHtml = () => {\n    if (!asciiOutputRef.current) return;\n\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>ASCII Art</title>\n        <style>\n          body {\n            background-color: #111;\n            color: ${options.colored ? 'inherit' : '#f0f0f0'};\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            margin: 0;\n            padding: 20px;\n            font-family: ${options.fontFamily};\n          }\n        </style>\n      </head>\n      <body>\n        ${asciiOutputRef.current.innerHTML}\n      </body>\n      </html>\n    `;\n\n    const element = document.createElement('a');\n    const file = new Blob([htmlContent], { type: 'text/html' });\n    element.href = URL.createObjectURL(file);\n    element.download = 'ascii-art.html';\n    \n    // Safer approach: don't append to DOM, just simulate click\n    element.style.display = 'none';\n    element.click();\n    \n    // Clean up the URL object\n    setTimeout(() => {\n      URL.revokeObjectURL(element.href);\n    }, 100);\n  };\n\n  return (\n    <div className=\"flex flex-col lg:flex-row gap-6 w-full\">\n      {/* Input section */}\n      <div className=\"w-full lg:w-1/3\">\n        <Card title=\"Image Input\">\n          <div\n            className=\"border-2 border-dashed border-gray-700 rounded-md p-6 mb-4 text-center cursor-pointer hover:border-red-700 transition-colors\"\n            onClick={() => fileInputRef.current?.click()}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n          >\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n              accept=\"image/*\"\n              className=\"hidden\"\n            />\n            {image ? (\n              <div className=\"flex flex-col items-center\">\n                <Image\n                  src={image.src}\n                  alt=\"Preview\"\n                  width={200}\n                  height={150}\n                  className=\"max-w-full max-h-48 mb-2 rounded object-contain\"\n                />\n                <p className=\"text-gray-400 text-sm\">Click or drag to replace</p>\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-12 w-12 text-gray-600 mb-2\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                  />\n                </svg>\n                <p className=\"text-gray-300 font-medium\">Click or drag image here</p>\n                <p className=\"text-gray-500 text-sm mt-1\">Supports JPG, PNG, GIF, etc.</p>\n              </div>\n            )}\n          </div>\n\n          {/* Controls */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-red-500 font-bold uppercase tracking-wider mb-2\">Configuration</h3>\n            \n            <Select\n              id=\"character-set\"\n              label=\"Character Set\"\n              options={characterSetOptions}\n              value={Object.keys(CHARACTER_SETS).find(\n                key => CHARACTER_SETS[key as keyof typeof CHARACTER_SETS] === options.characterSet\n              ) || 'standard'}\n              onChange={handleCharacterSetChange}\n            />\n            \n            <Slider\n              id=\"width\"\n              label=\"Width\"\n              min={20}\n              max={200}\n              step={5}\n              value={options.width}\n              onChange={(value) => updateOption('width', value)}\n            />\n            \n            <Slider\n              id=\"contrast\"\n              label=\"Contrast\"\n              min={-1}\n              max={1}\n              step={0.1}\n              value={options.contrast}\n              onChange={(value) => updateOption('contrast', value)}\n            />\n            \n            <Slider\n              id=\"brightness\"\n              label=\"Brightness\"\n              min={-1}\n              max={1}\n              step={0.1}\n              value={options.brightness}\n              onChange={(value) => updateOption('brightness', value)}\n            />\n            \n            <Slider\n              id=\"font-size\"\n              label=\"Font Size\"\n              min={6}\n              max={24}\n              step={1}\n              value={options.fontSize}\n              onChange={(value) => updateOption('fontSize', value)}\n            />\n            \n            <Slider\n              id=\"line-height\"\n              label=\"Line Height\"\n              min={0.5}\n              max={2}\n              step={0.1}\n              value={options.lineHeight}\n              onChange={(value) => updateOption('lineHeight', value)}\n            />\n            \n            <Toggle\n              id=\"invert\"\n              label=\"Invert Colors\"\n              checked={options.invert}\n              onChange={(value) => updateOption('invert', value)}\n            />\n            \n            <Toggle\n              id=\"colored\"\n              label=\"Colored Output\"\n              checked={options.colored}\n              onChange={(value) => updateOption('colored', value)}\n            />\n            \n            <div className=\"flex gap-2 mt-4\">\n              <Button\n                variant=\"primary\"\n                onClick={() => image && generateAsciiArt(image)}\n                disabled={!image || isProcessing}\n                className=\"flex-1\"\n              >\n                {isProcessing ? 'Processing...' : 'Generate'}\n              </Button>\n              \n              <Button\n                variant=\"secondary\"\n                onClick={() => setOptions({\n                  ...DEFAULT_OPTIONS,\n                  characterSet: CHARACTER_SETS.standard,\n                })}\n                className=\"flex-1\"\n              >\n                Reset\n              </Button>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      {/* Output section */}\n      <div className=\"w-full lg:w-2/3\">\n        <Card title=\"ASCII Output\" className=\"h-full\">\n          <div className=\"flex justify-between mb-4\">\n            <div className=\"flex gap-2\">\n              <Button\n                variant={previewMode === 'ascii' ? 'primary' : 'secondary'}\n                size=\"sm\"\n                onClick={() => setPreviewMode('ascii')}\n              >\n                ASCII\n              </Button>\n              <Button\n                variant={previewMode === 'image' ? 'primary' : 'secondary'}\n                size=\"sm\"\n                onClick={() => setPreviewMode('image')}\n                disabled={!image}\n              >\n                Original\n              </Button>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={copyToClipboard}\n                disabled={!asciiArt}\n              >\n                Copy\n              </Button>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={downloadAsciiArt}\n                disabled={!asciiArt}\n              >\n                Download TXT\n              </Button>\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={downloadAsHtml}\n                disabled={!asciiArt}\n              >\n                Download HTML\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"relative bg-black rounded-md overflow-auto h-[500px] p-4\">\n            {isProcessing && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 z-10\">\n                <div className=\"text-red-500 text-xl font-bold\">Processing...</div>\n              </div>\n            )}\n                       {previewMode === 'ascii' ? (\n              <>\n                {asciiArt && !options.colored && (\n                  <div className=\"text-gray-200 whitespace-pre overflow-auto\" ref={asciiOutputRef}>\n                    <pre\n                      style={{\n                        fontFamily: options.fontFamily,\n                        fontSize: options.fontSize,\n                        lineHeight: options.lineHeight,\n                        margin: 0,\n                        whiteSpace: 'pre-wrap',\n                        wordBreak: 'break-all'\n                      }}\n                    >\n                      {asciiArt.replace(/\\\\n/g, '\\n')}\n                    </pre>\n                  </div>\n                )}\n                {asciiArt && options.colored && (\n                  <div\n                    ref={asciiOutputRef}\n                    style={{\n                      fontFamily: options.fontFamily,\n                      fontSize: options.fontSize,\n                      lineHeight: options.lineHeight,\n                      color: \"#e5e7eb\",\n                      background: \"black\",\n                      borderRadius: \"0.375rem\",\n                      overflow: \"auto\",\n                      height: \"100%\",\n                      padding: \"1rem\",\n                      whiteSpace: 'pre-wrap',\n                      wordBreak: 'break-all'\n                    }}\n                    dangerouslySetInnerHTML={{ __html: asciiArt.replace(/\\\\n/g, '\\n') }}\n                  />\n                )}\n                {!asciiArt && !isProcessing && (\n                  <div className=\"flex flex-col items-center justify-center h-full text-gray-600\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-12 w-12 mb-2\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                      />\n                    </svg>\n                    <p className=\"text-lg font-medium\">ASCII output will appear here</p>\n                    <p className=\"text-sm mt-1\">Upload an image to get started</p>\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className=\"flex items-center justify-center h-full\">\n                {image ? (\n                  <Image\n                    src={image.src}\n                    alt=\"Original\"\n                    width={800}\n                    height={600}\n                    className=\"max-w-full max-h-full object-contain\"\n                  />\n                ) : (\n                  <div className=\"text-gray-600\">No image selected</div>\n                )}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mt-4 text-gray-500 text-sm\">\n            <p>\n              <span className=\"text-red-500 font-bold\">IMPERIUM APPROVED:</span> For the glory of the Emperor, transform your pict-captures into holy binary script.\n            </p>\n          </div>\n        </Card>\n      </div>\n\n      {/* Hidden canvas for image processing */}\n      <canvas ref={canvasRef} className=\"hidden\" />\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}